dubbo:
  scan:
    basePackages: com.example.service.impl
  application:
    name: springboot-provider
  registry:
    address: zookeeper://127.0.0.1:2181
  protocol:
    name: dubbo
    port: 20880
  provider:
    timeout: 5000


#    registrys:               # 多个应用注册中心时配置项（注意，如果要配置多个注册中心，必须指定的不同的id和名字）
#    - id: test2
#      name: test2
#      protocol: zookeeper   # 必填 服务发现 注册中心支持的协议 包括 dubbo,multicast,zookeeper,redis 默认是zookeeper
#      address: 127.0.0.1    # 必填 服务发现 注册中心服务器地址，如果地址没有端口缺省为9090，同一集群内的多个地址用逗号分隔，如：ip:port,ip:port，不同集群的注册中心，请配置多个spring.dubbo.registry.标签 1.0.16以上版本
#      port: 2182            # 可选 服务发现 注册中心缺省端口，当address没有带端口时使用此端口做为缺省值 2.0.0以上版本
#      client: zkclient      # 可选 服务发现 注册中心支持的客户端， zookeeper 支持客户端包括 curator和zkclient,如果不配置，默认使用zkclient

spring:
  profiles:
    active:
  datasource:
    #    driver-class-name: com.mysql.jdbc.Driver
    #    url: jdbc:mysql://localhost:3306/dbgril?useUnicode=true&characterEncoding=utf8&useSSL=false
    #    username: root
    #    password: 123456
#    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://127.0.0.1:3306/dbgril?useUnicode=true&characterEncoding=utf8&useSSL=false
    username: root
    password: root
    driver-class-name: com.mysql.jdbc.Driver
      ###################以下为druid增加的配置###########################
    type: com.alibaba.druid.pool.DruidDataSource
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
      # 配置获取连接等待超时的时间
    maxWait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: true
    maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: true
      ###############以上为配置druid添加的配置########################################
#    hikari:
#      data-source-properties:
#        cachePrepStmts: true
#        prepStmtCacheSize: 250
#        prepStmtCacheSqlLimit: 2048
#        useServerPrepStmts: true
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    #公共配置与profiles选择无关 mapperLocations指的路径是src/main/resources
  mybatis:
    typeAliasesPackage: com.example.domain
    mapperLocations: classpath:mapper/*.xml

  #  # Redis数据库索引（默认为0）
  #  database
  #  # Redis服务器地址
  #  spring.redis.host=127.0.0.1
  #  # Redis服务器连接端口
  #  spring.redis.port=6379
  #  # Redis服务器连接密码（默认为空）
  #  spring.redis.password=
  #  # 连接池最大连接数（使用负值表示没有限制）
  #  spring.redis.pool.max-active=8
  #  # 连接池最大阻塞等待时间（使用负值表示没有限制）
  #  spring.redis.pool.max-wait=-1读取配置文件内容
  #  # 连接池中的最大空闲连接
  #  spring.redis.pool.max-idle=8
  #  # 连接池中的最小空闲连接
  #  spring.redis.pool.min-idle=0
  #  # 连接超时时间（毫秒）
  #  spring.redis.timeout=0
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password:
    pool:
      max-active: 8
      max-wait: -1
      max-idle: 8
      min-idle: 0
    timeout: 0
logging:
  com.example: debug
server:
  port: 8081

